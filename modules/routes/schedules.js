// Generated by CoffeeScript 1.10.0
(function() {
  module.exports = (function() {
    var Ioredis, app, config, express, redis;
    express = require('express');
    app = express();
    config = require('../../config.js');
    Ioredis = require('ioredis');
    redis = new Ioredis(config.dbport, config.dbaddr);
    app.get('/', function(req, res) {
      return redis.zrange('services', 0, -1, 'WITHSCORES', function(err, result) {
        if (err) {
          return res.send('An error occured: ' + err);
        } else {
          return res.send(result);
        }
      });
    });
    app.get('/currentclass', function(req, res) {
      return redis.get('currentclass', function(err, result) {
        if (err) {
          return res.send('An error occured: ' + err);
        } else {
          return res.send(result);
        }
      });
    });
    app.get('/nextclass', function(req, res) {
      return redis.get('nextclass', function(err, result) {
        if (err) {
          return res.send('An error occured: ' + err);
        } else {
          return res.send(result);
        }
      });
    });
    app.get('/today', function(req, res) {
      return redis.get('today').then(function(result) {
        return res.send(result);
      });
    });
    app.get('/remainingtime', function(req, res) {
      return redis.get('remainingtime', function(err, result) {
        if (err) {
          res.send(err);
          throw err;
        } else {
          return res.send(result);
        }
      });
    });
    app.get('/specialschedule', function(req, res) {
      return redis.get('specials', function(err, result) {
        if (err) {
          res.send(err);
          throw err;
        } else {
          return res.send(result);
        }
      });
    });
    app.get('/week', function(req, res) {
      return redis.get('week', function(err, result) {
        if (err) {
          res.send(err);
          throw err;
        }
        return res.send(result);
      });
    });
    return app;
  })();

}).call(this);

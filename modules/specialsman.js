// Generated by CoffeeScript 1.10.0
(function() {
  var IsJsonString, config;

  config = require('../config.js');

  IsJsonString = function(str) {
    var e, error;
    try {
      JSON.parse(str);
    } catch (error) {
      e = error;
      return false;
    }
    return true;
  };

  console.log('Starting Data Processor...');

  config.connect('specials');

  redislistener.on('message', function(channel, message) {
    console.log('got message');
    redis.get('specials', function(err, res) {
      var input, specials;
      if (err) {
        console.log(err);
      }
      specials = JSON.parse(res);
      input = JSON.parse(message);
      if (IsJsonString(message)) {
        console.log('got a new special');
        if (Array.isArray(specials) === false) {
          specials = [];
          console.log('specials is bad, restarting');
        }
        if (typeof input.date === 'string' && Array.isArray(input.schedule)) {
          specials.push(JSON.parse(message));
          redis.set('specials', JSON.stringify(specials));
          redis.publish('dbman', 'update');
        }
      } else {
        console.log('message invalid json');
      }
    });
  });

  console.log('Reporting to service set');

  redis.zincrby('services', 1, 'specialsman');

  process.on('exit', function(code) {
    console.log('Removing From service list');
    redis.zincrby('services', -1, 'specialsman');
    redis.quit();
    redislistener.quit();
  });

  process.on('SIGINT', function(code) {
    process.exit();
  });

}).call(this);
